<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Role extends \App\Entity\Role implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolId', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolNom', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDescription', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolAuteurcreation', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDatecreation', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolAuteurchangement', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDatechangement'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolId', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolNom', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDescription', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolAuteurcreation', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDatecreation', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolAuteurchangement', '' . "\0" . 'App\\Entity\\Role' . "\0" . 'rolDatechangement'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Role $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRolId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getRolId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolId', []);

        return parent::getRolId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRolNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolNom', []);

        return parent::getRolNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolNom(string $rolNom): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolNom', [$rolNom]);

        return parent::setRolNom($rolNom);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolDescription', []);

        return parent::getRolDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolDescription(?string $rolDescription): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolDescription', [$rolDescription]);

        return parent::setRolDescription($rolDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolAuteurcreation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolAuteurcreation', []);

        return parent::getRolAuteurcreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolAuteurcreation(string $rolAuteurcreation): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolAuteurcreation', [$rolAuteurcreation]);

        return parent::setRolAuteurcreation($rolAuteurcreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolDatecreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolDatecreation', []);

        return parent::getRolDatecreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolDatecreation(\DateTimeInterface $rolDatecreation): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolDatecreation', [$rolDatecreation]);

        return parent::setRolDatecreation($rolDatecreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolAuteurchangement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolAuteurchangement', []);

        return parent::getRolAuteurchangement();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolAuteurchangement(string $rolAuteurchangement): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolAuteurchangement', [$rolAuteurchangement]);

        return parent::setRolAuteurchangement($rolAuteurchangement);
    }

    /**
     * {@inheritDoc}
     */
    public function getRolDatechangement(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRolDatechangement', []);

        return parent::getRolDatechangement();
    }

    /**
     * {@inheritDoc}
     */
    public function setRolDatechangement(\DateTimeInterface $rolDatechangement): \App\Entity\Role
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRolDatechangement', [$rolDatechangement]);

        return parent::setRolDatechangement($rolDatechangement);
    }

}
