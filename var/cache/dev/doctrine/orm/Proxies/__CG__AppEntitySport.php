<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Sport extends \App\Entity\Sport implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoId', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoName', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDescription', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoAuteurcreation', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDatecreation', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoAuteurchangement', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDatechangement', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoFktypesport'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoId', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoName', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDescription', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoAuteurcreation', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDatecreation', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoAuteurchangement', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoDatechangement', '' . "\0" . 'App\\Entity\\Sport' . "\0" . 'spoFktypesport'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Sport $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSpoId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getSpoId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoId', []);

        return parent::getSpoId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoName', []);

        return parent::getSpoName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoName(string $spoName): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoName', [$spoName]);

        return parent::setSpoName($spoName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoDescription', []);

        return parent::getSpoDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoDescription(?string $spoDescription): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoDescription', [$spoDescription]);

        return parent::setSpoDescription($spoDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoAuteurcreation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoAuteurcreation', []);

        return parent::getSpoAuteurcreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoAuteurcreation(string $spoAuteurcreation): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoAuteurcreation', [$spoAuteurcreation]);

        return parent::setSpoAuteurcreation($spoAuteurcreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoDatecreation(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoDatecreation', []);

        return parent::getSpoDatecreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoDatecreation(\DateTimeInterface $spoDatecreation): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoDatecreation', [$spoDatecreation]);

        return parent::setSpoDatecreation($spoDatecreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoAuteurchangement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoAuteurchangement', []);

        return parent::getSpoAuteurchangement();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoAuteurchangement(string $spoAuteurchangement): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoAuteurchangement', [$spoAuteurchangement]);

        return parent::setSpoAuteurchangement($spoAuteurchangement);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoDatechangement(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoDatechangement', []);

        return parent::getSpoDatechangement();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoDatechangement(\DateTimeInterface $spoDatechangement): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoDatechangement', [$spoDatechangement]);

        return parent::setSpoDatechangement($spoDatechangement);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpoFktypesport(): ?\App\Entity\Typesport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpoFktypesport', []);

        return parent::getSpoFktypesport();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpoFktypesport(?\App\Entity\Typesport $spoFktypesport): \App\Entity\Sport
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpoFktypesport', [$spoFktypesport]);

        return parent::setSpoFktypesport($spoFktypesport);
    }

}
